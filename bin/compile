#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

#echo -n "heroku-buildpack-ringojs-jdk7 compile start"
echo "cf-buildpack-ringojs-jdk7 compile start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
#ENV_DIR=$2

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

cd $BUILD_DIR
if [ -d "$CACHE_DIR/.jdk7" ]; then
  echo -n "copying jdk to app"
  cp -r "$CACHE_DIR/.jdk7" $BUILD_DIR
  echo "done"
fi

#OPENJDK7_URL="https://s3.amazonaws.com/heroku-jvm-langpack-java/openjdk7-u2-heroku-temaki.tar.gz"
OPENJDK7_URL="http://www.java.net/download/jdk7u40/archive/b40/binaries/jdk-7u40-fcs-bin-b40-linux-x64-16_aug_2013.tar.gz"

if [ ! -d "$BUILD_DIR/.jdk7" ]; then
  echo -n "-----> Installing OpenJDK7u2 build (to .jdk7)....."
  mkdir "$BUILD_DIR/.jdk7"
  cd "$BUILD_DIR/.jdk7"
  curl --max-time 180 --location $OPENJDK7_URL | tar xz
  cd $BUILD_DIR
  cp -r .jdk7 $CACHE_DIR/.jdk7
  echo " done"
fi

if [ -d "$CACHE_DIR/.ringojs" ]; then
  echo -n "copying ringojs to app"
  cp -r "$CACHE_DIR/.ringojs" $BUILD_DIR
  echo "done"
fi

RINGOJS_URL="https://github.com/downloads/ringo/ringojs/ringojs-0.8.tar.gz"

if [ ! -d "$BUILD_DIR/.ringojs" ]; then
  echo -n "-----> Installing ringojs build (to .ringojs)....."
  curl --max-time 320 --location $RINGOJS_URL | tar xz
  mv ringojs* .ringojs
  #rm '.ringojs/bin/*.cmd'
  cd $BUILD_DIR
  cp -r .ringojs $CACHE_DIR/.ringojs
  echo " done"
fi

#cd $BUILD_DIR
#export JAVA_HOME="$BUILD_DIR/.jdk7"
#export RINGOJS_HOME="$BUILD_DIR/.ringojs"
#export PATH=$PATH:$JAVA_HOME/bin:$RINGOJS_HOME/bin
#echo "Path is set to"
#echo $PATH

# Update the PATH
mkdir "$BUILD_DIR/.profile.d"
cat <<EOF > $BUILD_DIR/.profile.d/set_env.sh
#!/usr/bin/env bash
export JAVA_HOME="/home/vcap/app/.jdk7"
export RINGOJS_HOME="/home/vcap/app/.ringojs"
export PATH="$PATH:/home/vcap/app/.jdk7/bin:/home/vcap/app/.ringojs/bin"
export JAVA_OPTS="-Xmx384m"
export LANG="${LANG:-en_US.UTF-8}"
EOF

if [ -f compile.sh ]; then
    echo 'compile.sh file found, executing...'
    chmod 700 compile.sh
    ./compile.sh
fi

# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       ringo server.js"
fi

#echo -n "heroku-buildpack-ringojs-jdk7 compile end"
echo "cf-buildpack-ringojs-jdk7 compile end"
